version: '3.8'

x-base:
  &base
  env_file:
    - .env
  networks:
    - TweetTel
  restart: unless-stopped

x-django-app:
  &main-app-image
  <<: *base
  build:
    context: .
    network: host
    dockerfile: Dockerfile
  volumes:
    - StaticFiles:/app/static


services:
  postgres:
    <<: *base
    image: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  nginx:
    <<: *base
    image: nginx
    ports:
      - "8000:80"
    volumes:
      - ./config/nginx/conf.d/:/etc/nginx/conf.d/
      - StaticFiles:/app/static
    depends_on:
      - django

  redis:
    <<: *base
    image: redis
    volumes:
      - ./redis_data:/data

  rabbitmq:
    <<: *base
    image: rabbitmq:3-management

  django:
    <<: *main-app-image
    command: bash -c "python manage.py migrate && python manage.py migrate && gunicorn config.wsgi:application --bind :8000"
    expose:
      - 8000
    depends_on:
      - postgres
      - redis

  celery:
    <<: *main-app-image
    command: bash -c "celery -A config worker -l INFO --autoscale 10,3"
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - rabbitmq
      - django

  flower:
    <<: *main-app-image
    command: bash -c "celery -A config flower --address=127.0.0.6 --port=5566"
    expose:
      - 5566
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - rabbitmq
      - django

networks:
  TweetTel:

volumes:
  StaticFiles:
