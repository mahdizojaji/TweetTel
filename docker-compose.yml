version: '3.7'

services:
  postgres:
    image: postgres
    env_file:
      - .env
    networks:
      - TweetTel
    volumes:
      - ./postgres_data:/var/lib/postgresql/data:z
    restart: unless-stopped

  nginx:
    image: nginx
    ports:
      - "8000:80"
    volumes:
      - ./config/nginx/conf.d/:/etc/nginx/conf.d/
      - ./static:/app/static
    depends_on:
      - django
    networks:
      - TweetTel
    restart: unless-stopped

  redis:
    image: redis
    volumes:
      - ./redis_data:/data
    networks:
      - TweetTel
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    networks:
      - TweetTel
    restart: unless-stopped

  django: &django
    build:
      context: .
      network: host
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - 8000
    volumes:
      #       - .:/app
      - ./static:/app/static
    command: bash -c "python manage.py migrate && python manage.py migrate && gunicorn config.wsgi:application --bind :8000"
    networks:
      - TweetTel
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  celery:
    <<: *django
    command: bash -c "celery -A config worker -l INFO --autoscale 10,3"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - rabbitmq
      - django
    networks:
      - TweetTel
    restart: unless-stopped

  flower:
    <<: *django
    command: bash -c "celery -A config flower --address=127.0.0.6 --port=5566"
    volumes:
      - .:/app
    env_file:
      - .env
#    ports:
#      - "5566:5566"
    expose:
      - 5566
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - rabbitmq
      - django
    networks:
      - TweetTel
    restart: unless-stopped

networks:
  TweetTel:
